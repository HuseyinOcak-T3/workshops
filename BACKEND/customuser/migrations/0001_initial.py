# Generated by Django 5.2.5 on 2025-08-21 13:42

import customuser.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Şehir')),
            ],
            options={
                'verbose_name': 'Şehir',
                'verbose_name_plural': 'Şehirler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
            ],
        ),
        migrations.CreateModel(
            name='HeardAboutUsOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Ad')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Kaynak (Bizden Nasıl Haberdar)',
                'verbose_name_plural': 'Kaynaklar (Bizden Nasıl Haberdar)',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InstitutionTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Ad')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Kurum Tipi',
                'verbose_name_plural': 'Kurum Tipleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NationalityOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Ad')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Uyruk',
                'verbose_name_plural': 'Uyruklar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(help_text='Örn: superadmin, admin, instructor, student', unique=True, verbose_name='Kod')),
                ('name', models.CharField(max_length=100, verbose_name='Ad')),
                ('level', models.PositiveSmallIntegerField(help_text='1=En yüksek, 99=En düşük', verbose_name='Seviye')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roller',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolTypeOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Ad')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Okul Tipi',
                'verbose_name_plural': 'Okul Tipleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StatusOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Ad')),
                ('is_builtin', models.BooleanField(default=False, verbose_name='Yerleşik')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
            ],
            options={
                'verbose_name': 'Aktiflik Durumu',
                'verbose_name_plural': 'Aktiflik Durumları',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Ünvan')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ünvan',
                'verbose_name_plural': 'Ünvanlar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('permission_level', models.PositiveSmallIntegerField(default=99, help_text='1=En yüksek yetki')),
                ('first_name', models.CharField(blank=True, max_length=75, verbose_name='Ad')),
                ('last_name', models.CharField(blank=True, max_length=75, verbose_name='Soyad')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Telefon')),
                ('tc_no', models.CharField(blank=True, help_text='11 hane, opsiyonel', max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', message='T.C. Kimlik No 11 haneli olmalıdır.')], verbose_name='T.C. Kimlik No')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Erkek'), ('female', 'Kadın'), ('na', 'Belirtmek İstemiyorum')], max_length=10, null=True, verbose_name='Cinsiyet')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=customuser.models.user_profile_upload_path, verbose_name='Profil Fotoğrafı')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Hakkında')),
                ('expertise', models.TextField(blank=True, help_text='Virgülle ayırın', null=True, verbose_name='Uzmanlıklar')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='İlçe')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Şehir')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ülke')),
                ('passport_number', models.CharField(blank=True, help_text='Sadece harf/rakam', max_length=20, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]{5,20}$', message='Pasaport numarası 5-20 karakter, harf/rakam olmalıdır.')], verbose_name='Pasaport Numarası')),
                ('education_level', models.CharField(blank=True, choices=[('primary', 'İlkokul'), ('middle', 'Ortaokul'), ('high', 'Lise'), ('associate', 'Ön Lisans'), ('bachelor', 'Lisans'), ('master', 'Yüksek Lisans'), ('phd', 'Doktora'), ('other', 'Diğer')], max_length=20, null=True, verbose_name='Eğitim Seviyesi')),
                ('school_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Okul')),
                ('faculty_institute', models.CharField(blank=True, max_length=200, null=True, verbose_name='Fakülte / Enstitü')),
                ('department', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bölüm')),
                ('classroom', models.CharField(blank=True, help_text='Örn: 10, 3. sınıf, 1. sınıf', max_length=50, null=True, verbose_name='Sınıf')),
                ('expected_graduation_date', models.DateField(blank=True, null=True, verbose_name='Beklenen Mezuniyet Tarihi')),
                ('is_graduate', models.BooleanField(default=False, help_text='Mezun seviyesindeysen, en son tamamlanan eğitim bilgilerini beyan et.', verbose_name='Mezunum')),
                ('last_completed_education_level', models.CharField(blank=True, choices=[('primary', 'İlkokul'), ('middle', 'Ortaokul'), ('high', 'Lise'), ('associate', 'Ön Lisans'), ('bachelor', 'Lisans'), ('master', 'Yüksek Lisans'), ('phd', 'Doktora'), ('other', 'Diğer')], max_length=20, null=True, verbose_name='En Son Tamamlanan Eğitim Seviyesi')),
                ('last_completed_school', models.CharField(blank=True, max_length=200, null=True, verbose_name='En Son Tamamlanan Okul')),
                ('last_completed_faculty_institute', models.CharField(blank=True, max_length=200, null=True, verbose_name='En Son Tamamlanan Fakülte / Enstitü')),
                ('last_completed_department', models.CharField(blank=True, max_length=200, null=True, verbose_name='En Son Tamamlanan Bölüm')),
                ('last_completed_graduation_date', models.DateField(blank=True, null=True, verbose_name='En Son Tamamlanan Mezuniyet Tarihi')),
                ('has_disability', models.BooleanField(default=False, verbose_name='Engeli Var Mı?')),
                ('disability_description', models.TextField(blank=True, null=True, verbose_name='Engel Açıklaması')),
                ('profession', models.CharField(blank=True, max_length=120, null=True, verbose_name='Meslek')),
                ('current_institution_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='İçerisinde Bulunduğunuz Kurum Adı')),
                ('continuing_institution', models.CharField(blank=True, max_length=200, null=True, verbose_name='Devam Ettiği Kurum')),
                ('is_online', models.BooleanField(default=False)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('unread_notifications', models.PositiveIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Atelier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Atölye Adı')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Konum')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True)),
                ('responsible', models.ForeignKey(blank=True, limit_choices_to={'role__code': 'workshop_responsible'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_ateliers', to=settings.AUTH_USER_MODEL, verbose_name='Sorumlu')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ateliers', to='customuser.city')),
            ],
            options={
                'verbose_name': 'Atölye',
                'verbose_name_plural': 'Atölyeler',
                'ordering': ['city__name', 'name'],
                'unique_together': {('name', 'city')},
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='atelier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.atelier', verbose_name='Atölye'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='atelier_city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.city', verbose_name='Atölye Şehri'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='heard_about_us',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.heardaboutusoption', verbose_name='Bizden Nasıl Haberdar Oldunuz?'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='current_institution_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.institutiontypeoption', verbose_name='İçerisinde Bulunduğunuz Kurum Tipi'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='nationality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.nationalityoption', verbose_name='Uyruk'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='customuser.role', verbose_name='Rol'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='school_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.schooltypeoption', verbose_name='Okul Tipi'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.statusoption', verbose_name='Aktiflik Durumu'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.title', verbose_name='Ünvan'),
        ),
        migrations.CreateModel(
            name='StudentParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parents', models.ManyToManyField(blank=True, limit_choices_to={'role__code': 'student_parent'}, related_name='ward_links', to=settings.AUTH_USER_MODEL, verbose_name='Veliler')),
                ('student', models.ForeignKey(limit_choices_to={'role__code': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='parent_links', to=settings.AUTH_USER_MODEL, verbose_name='Öğrenci')),
            ],
            options={
                'verbose_name': 'Öğrenci - Veli İlişkisi',
                'verbose_name_plural': 'Öğrenci - Veli İlişkileri',
                'constraints': [models.UniqueConstraint(fields=('student',), name='unique_student_in_parent_link')],
            },
        ),
    ]
