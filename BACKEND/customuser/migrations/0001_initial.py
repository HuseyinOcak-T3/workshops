# Generated by Django 5.2.5 on 2025-08-08 15:38

import customuser.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Şehir')),
            ],
            options={
                'verbose_name': 'Şehir',
                'verbose_name_plural': 'Şehirler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Ünvan')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ünvan',
                'verbose_name_plural': 'Ünvanlar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Atelier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Atölye Adı')),
                ('is_active', models.BooleanField(default=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ateliers', to='customuser.city')),
            ],
            options={
                'verbose_name': 'Atölye',
                'verbose_name_plural': 'Atölyeler',
                'ordering': ['city__name', 'name'],
                'unique_together': {('name', 'city')},
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('permission_level', models.PositiveSmallIntegerField(default=8, help_text='8=En düşük, 1=En yüksek yetki')),
                ('role', models.CharField(choices=[('superadmin', 'Superadmin'), ('admin', 'Admin'), ('komisyon', 'Komisyon'), ('il_koordinatoru', 'Il Koordinatoru'), ('workshop_responsible', 'Atolye Sorumlusu'), ('egitmen', 'Egitmen'), ('mentor', 'Mentor'), ('student', 'Ogrenci')], default='ogrenci', max_length=32, verbose_name='Rol')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Ad')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Soyad')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Telefon')),
                ('tc_no', models.CharField(blank=True, help_text='11 hane, opsiyonel', max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', message='T.C. Kimlik No 11 haneli olmalıdır.')], verbose_name='T.C. Kimlik No')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=customuser.models.user_profile_upload_path, verbose_name='Profil Foto')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Hakkında')),
                ('expertise', models.TextField(blank=True, help_text='Virgülle ayırın', null=True, verbose_name='Uzmanlıklar')),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('unread_notifications', models.PositiveIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('atelier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.atelier', verbose_name='Atölye')),
                ('atelier_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.city', verbose_name='Atölye Şehri')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customuser.title', verbose_name='Ünvan')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
